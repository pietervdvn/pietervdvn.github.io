{"version":3,"sources":["vendor/Leaflet.AccuratePosition.js"],"names":["L","Map","include","_defaultAccuratePositionOptions","maxWait","desiredAccuracy","findAccuratePosition","options","navigator","geolocation","_handleAccuratePositionError","code","message","_accuratePositionEventCount","_accuratePositionOptions","extend","enableHighAccuracy","maximumAge","timeout","onResponse","bind","_checkAccuratePosition","onError","onTimeout","_handleAccuratePositionTimeout","_accuratePositionWatchId","watchPosition","_accuratePositionTimerId","setTimeout","clearWatch","_lastCheckedAccuratePosition","_handleAccuratePositionResponse","_cleanUpAccuratePositioning","clearTimeout","pos","accuracyReached","coords","accuracy","_handleAccuratePositionProgress","_prepareAccuratePositionData","lat","latitude","lng","longitude","latlng","LatLng","latAccuracy","lngAccuracy","Math","cos","PI","data","bounds","latLngBounds","timestamp","i","fire","error","c","console","log"],"mappings":";AAUAA,EAAEC,IAAIC,QAAQ,CACVC,gCAAiC,CAC7BC,QAAS,IACTC,gBAAiB,IAGrBC,qBAAsB,SAAUC,GAExB,IAACC,UAAUC,YAKJ,OAJFC,KAAAA,6BAA6B,CAC9BC,KAAM,EACNC,QAAS,+BAEN,KAGNC,KAAAA,4BAA8B,EAC9BC,KAAAA,yBAA2Bd,EAAEe,OAAO,KAAKZ,gCAAiCI,GAC1EO,KAAAA,yBAAyBE,oBAAqB,EAC9CF,KAAAA,yBAAyBG,WAAa,EAEtC,KAAKH,yBAAyBI,UAC/B,KAAKJ,yBAAyBI,QAAU,KAAKJ,yBAAyBV,SAEtEe,IAAAA,EAAanB,EAAEoB,KAAK,KAAKC,uBAAwB,MACjDC,EAAUtB,EAAEoB,KAAK,KAAKV,6BAA8B,MACpDa,EAAYvB,EAAEoB,KAAK,KAAKI,+BAAgC,MAEvDC,KAAAA,yBAA2BjB,UAAUC,YAAYiB,cAClDP,EACAG,EACA,KAAKR,0BAEJa,KAAAA,yBAA2BC,WAC5BL,EACA,KAAKT,yBAAyBV,UAGtCoB,+BAAgC,WAYrB,OAXPhB,UAAUC,YAAYoB,WAAW,KAAKJ,+BAEW,IAAtC,KAAKK,6BACPC,KAAAA,gCAAgC,KAAKD,8BAErCpB,KAAAA,6BAA6B,CAC9BC,KAAM,EACNC,QAAS,oBAIV,MAGXoB,4BAA6B,WACzBC,aAAa,KAAKN,0BAClBnB,UAAUC,YAAYoB,WAAW,KAAKJ,2BAG1CJ,uBAAwB,SAAUa,GAC1BC,IAAAA,EAAkBD,EAAIE,OAAOC,UAAY,KAAKvB,yBAAyBT,gBAEtEyB,KAAAA,6BAA+BI,EAC/BrB,KAAAA,4BAA8B,KAAKA,4BAA8B,EAElEsB,GAAoB,KAAKtB,4BAA8B,GAClDmB,KAAAA,8BACAD,KAAAA,gCAAgCG,IAEhCI,KAAAA,gCAAgCJ,IAI7CK,6BAA8B,SAAUL,GAChCM,IAAAA,EAAMN,EAAIE,OAAOK,SACjBC,EAAMR,EAAIE,OAAOO,UACjBC,EAAS,IAAI5C,EAAE6C,OAAOL,EAAKE,GAE3BI,EAAc,IAAMZ,EAAIE,OAAOC,SAAW,SAC1CU,EAAcD,EAAcE,KAAKC,IAAID,KAAKE,GAAK,IAAMV,GAMrDW,EAAO,CACPP,OAAQA,EACRQ,OANSpD,EAAEqD,aACP,CAACb,EAAMM,EAAaJ,EAAMK,GAC1B,CAACP,EAAMM,EAAaJ,EAAMK,IAK9BO,UAAWpB,EAAIoB,WAGd,IAAA,IAAIC,KAAKrB,EAAIE,OACe,iBAAlBF,EAAIE,OAAOmB,KAClBJ,EAAKI,GAAKrB,EAAIE,OAAOmB,IAItBJ,OAAAA,GAGXb,gCAAiC,SAAUJ,GACnCiB,IAAAA,EAAO,KAAKZ,6BAA6BL,GACxCsB,KAAAA,KAAK,2BAA4BL,IAG1CpB,gCAAiC,SAAUG,GACnCiB,IAAAA,EAAO,KAAKZ,6BAA6BL,GACxCsB,KAAAA,KAAK,wBAAyBL,IAGvCzC,6BAA8B,SAAU+C,GAChCC,IAAAA,EAAID,EAAM9C,KACVC,EAAU6C,EAAM7C,UACL,IAAN8C,EAAU,oBACA,IAANA,EAAU,uBAAyB,WAE3C1B,KAAAA,8BAEAwB,KAAAA,KAAK,wBAAyB,CAC/B7C,KAAM+C,EACN9C,QAAS,sBAAwBA,EAAU,SAIvD+C,QAAQC,IAAI","file":"Leaflet.AccuratePosition.1085fd17.js","sourceRoot":"..","sourcesContent":["/**\n * Leaflet.AccuratePosition aims to provide an accurate device location when simply calling map.locate() doesnâ€™t.\n * https://github.com/m165437/Leaflet.AccuratePosition\n *\n * Greg Wilson's getAccurateCurrentPosition() forked to be a Leaflet plugin\n * https://github.com/gwilson/getAccurateCurrentPosition\n *\n * Copyright (C) 2013 Greg Wilson, 2014 Michael Schmidt-Voigt\n */\n\nL.Map.include({\n    _defaultAccuratePositionOptions: {\n        maxWait: 10000,\n        desiredAccuracy: 20\n    },\n\n    findAccuratePosition: function (options) {\n\n        if (!navigator.geolocation) {\n            this._handleAccuratePositionError({\n                code: 0,\n                message: 'Geolocation not supported.'\n            });\n            return this;\n        }\n\n        this._accuratePositionEventCount = 0;\n        this._accuratePositionOptions = L.extend(this._defaultAccuratePositionOptions, options);\n        this._accuratePositionOptions.enableHighAccuracy = true;\n        this._accuratePositionOptions.maximumAge = 0;\n\n        if (!this._accuratePositionOptions.timeout)\n            this._accuratePositionOptions.timeout = this._accuratePositionOptions.maxWait;\n\n        var onResponse = L.bind(this._checkAccuratePosition, this),\n            onError = L.bind(this._handleAccuratePositionError, this),\n            onTimeout = L.bind(this._handleAccuratePositionTimeout, this);\n\n        this._accuratePositionWatchId = navigator.geolocation.watchPosition(\n            onResponse,\n            onError,\n            this._accuratePositionOptions);\n\n        this._accuratePositionTimerId = setTimeout(\n            onTimeout,\n            this._accuratePositionOptions.maxWait);\n    },\n\n    _handleAccuratePositionTimeout: function() {\n        navigator.geolocation.clearWatch(this._accuratePositionWatchId);\n\n        if (typeof this._lastCheckedAccuratePosition !== 'undefined') {\n            this._handleAccuratePositionResponse(this._lastCheckedAccuratePosition);\n        } else {\n            this._handleAccuratePositionError({\n                code: 3,\n                message: 'Timeout expired'\n            });\n        }\n\n        return this;\n    },\n\n    _cleanUpAccuratePositioning: function () {\n        clearTimeout(this._accuratePositionTimerId);\n        navigator.geolocation.clearWatch(this._accuratePositionWatchId);\n    },\n\n    _checkAccuratePosition: function (pos) {\n        var accuracyReached = pos.coords.accuracy <= this._accuratePositionOptions.desiredAccuracy;\n\n        this._lastCheckedAccuratePosition = pos;\n        this._accuratePositionEventCount = this._accuratePositionEventCount + 1;\n\n        if (accuracyReached && (this._accuratePositionEventCount > 1)) {\n            this._cleanUpAccuratePositioning();\n            this._handleAccuratePositionResponse(pos);\n        } else {\n            this._handleAccuratePositionProgress(pos);\n        }\n    },\n\n    _prepareAccuratePositionData: function (pos) {\n        var lat = pos.coords.latitude,\n            lng = pos.coords.longitude,\n            latlng = new L.LatLng(lat, lng),\n\n            latAccuracy = 180 * pos.coords.accuracy / 40075017,\n            lngAccuracy = latAccuracy / Math.cos(Math.PI / 180 * lat),\n\n            bounds = L.latLngBounds(\n                [lat - latAccuracy, lng - lngAccuracy],\n                [lat + latAccuracy, lng + lngAccuracy]);\n\n        var data = {\n            latlng: latlng,\n            bounds: bounds,\n            timestamp: pos.timestamp\n        };\n\n        for (var i in pos.coords) {\n            if (typeof pos.coords[i] === 'number') {\n                data[i] = pos.coords[i];\n            }\n        }\n\n        return data;\n    },\n\n    _handleAccuratePositionProgress: function (pos) {\n        var data = this._prepareAccuratePositionData(pos);\n        this.fire('accuratepositionprogress', data);\n    },\n\n    _handleAccuratePositionResponse: function (pos) {\n        var data = this._prepareAccuratePositionData(pos);\n        this.fire('accuratepositionfound', data);\n    },\n\n    _handleAccuratePositionError: function (error) {\n        var c = error.code,\n            message = error.message ||\n                (c === 1 ? 'permission denied' :\n                    (c === 2 ? 'position unavailable' : 'timeout'));\n\n        this._cleanUpAccuratePositioning();\n\n        this.fire('accuratepositionerror', {\n            code: c,\n            message: 'Geolocation error: ' + message + '.'\n        });\n    }\n});\nconsole.log(\"Find accurate position script loaded\");"]}