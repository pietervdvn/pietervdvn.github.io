parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"iX08":[function(require,module,exports) {
module.exports={id:"postal_codes",title:{en:"Postal codes"},shortDescription:{en:"Postal codes"},description:{en:"Postal codes"},language:["en"],maintainer:"",icon:"./assets/themes/postal_codes/townhall.svg",version:"0",startLat:0,startLon:0,startZoom:1,widenFactor:.05,socialImage:"",hideFromOverview:!0,clustering:!1,overpassTimeout:180,layers:[{id:"postal_code_boundary",name:{en:"postal codes"},minzoom:8,title:{render:{en:"Postal code {postal_code}"}},description:{},tagRenderings:[{id:"postal_code",render:{en:"The postal code is {postal_code}"}}],source:{osmTags:{or:["boundary=postal_code",{and:["bounary=administrative","postal_code~*"]}]}},mapRendering:[{label:"<div class='text-xl bg-white rounded-full pl-2 pr-2 break-normal'>{postal_code}</div>",location:["point","centroid"]},{color:{render:"#00f"},width:{render:"4"},fill:"no",dashArray:"8 8"}],isShown:{render:"yes",mappings:[{if:"_country!=be",then:"no"}]}},{id:"wrong_postal_code",source:{osmTags:{and:["boundary~*","addr:postcode~*"]}},title:"Boundary relation with addr:postcode={addr:postcode}",mapRendering:[{color:"#f00",width:1}]},{id:"town_hall",name:{en:"town halls"},minzoom:12,title:{render:{en:"Town hall {name}"}},calculatedTags:["_postal_code_properties=(() => { const f = feat.overlapWith('postal_code_boundary'); if(f.length===0){return {};}; const p = f[0]?.feat?.properties; return {id:p.id, postal_code: p.postal_code, _closest_town_hall: p._closest_town_hall}; })()","_postal_code=feat.get('_postal_code_properties')?.postal_code","_postal_code_center_distance=feat.distanceTo(feat.get('_postal_code_properties').id)"],description:{},tagRenderings:[],presets:[],source:{osmTags:{or:["amenity=townhall","building=church"]}},mapRendering:[{icon:"./assets/themes/postal_codes/townhall.svg",iconSize:{render:"40,40,center"},location:["point","centroid"]}],isShown:{render:"yes",mappings:[{if:"_country!=be",then:"no"}]}}]};
},{}]},{},["iX08"], null)
//# sourceMappingURL=assets/themes/postal_codes/postal_codes.js.map